{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/NavBar.js","helpers/calendar-messages-es.js","actions/ui.js","components/calendar/CalendarEvent.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddnew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","console","log","NavBar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","uiOpenModal","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleIpuntChange","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","location","pathname","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2602d56.chunk.js","sourcesContent":["const baseUrl= process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = (endpoint, data, method='GET')=>{\r\n\r\n    const url= `${ baseUrl }/${endpoint}`;\r\n\r\n    if(method==='GET'){\r\n        return fetch(url);\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method='GET')=>{\r\n\r\n    const url= `${ baseUrl }/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if(method==='GET'){\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'x-token': token\r\n            }\r\n        });\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","\r\n\r\nexport const types={\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventCleanAll: '[event] All Clean',\r\n\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event Deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authChecking: '[auth] Checking login state',\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n\r\n}","import moment from \"moment\";\r\n\r\n\r\n\r\nexport const prepareEvents=(events=[])=>{\r\n\r\n    return events.map(\r\n        (e)=>({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate(),\r\n        })\r\n    );\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const eventStartAddNew=(event)=>{\r\n    return async(dispatch, getState)=>{\r\n        \r\n        const {uid, name} = getState().auth;\r\n\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n    \r\n            if(body.ok){\r\n                event.id = body.evento.id;\r\n                event.user={\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n            }\r\n            dispatch(eventAddnew(event));\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\nconst eventAddnew=(event)=>({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive=(event)=>({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\n\r\nexport const eventClearActiveEvent=()=>({\r\n    type: types.eventClearActiveEvent\r\n})\r\n\r\nexport const eventStartUpdate = (event) =>{\r\n    return async(dispatch)=>{\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event));\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst eventUpdated =(event)=>({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\nexport const eventStartDelete=()=>{\r\n    \r\n    return async(dispatch, getState)=>{\r\n        const {id} = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventDeleted());\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst eventDeleted=()=>({\r\n    type: types.eventDeleted,\r\n})\r\n\r\n\r\nexport const eventStartLoading=()=>{\r\n    return async (dispatch)=>{\r\n    try {\r\n\r\n        const resp = await fetchConToken('events');\r\n        const body = await resp.json();\r\n\r\n        const events = prepareEvents(body.eventos);\r\n        dispatch(eventLoaded(events));\r\n        \r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded=(events)=>({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventCleanAll=()=>({\r\n    type: types.eventCleanAll\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventCleanAll } from \"./events\";\r\n\r\nexport const startLogin = (email, password)=>{\r\n    return async(dispatch)=>{\r\n        \r\n        const resp = await fetchSinToken('auth',{email, password}, 'POST');\r\n        const body = await resp.json();\r\n        \r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            \r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n            \r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const startRegister = (name, email, password)=>{\r\n    return async(dispatch)=>{\r\n\r\n        const resp = await fetchSinToken('auth/new',{name, email, password}, 'POST');\r\n        const body = await resp.json();\r\n        \r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            \r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');      \r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = ()=>{\r\n\r\n    return async(dispatch)=>{\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            \r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n    \r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = ()=>({type: types.authCheckingFinish});\r\n\r\nconst login=(user)=>({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = ()=>{\r\n    return (dispatch)=>{\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n        dispatch(eventCleanAll());\r\n    }\r\n}\r\n\r\n\r\nconst logout = ()=>({ type: types.authLogout});\r\n\r\n\r\n","  \r\nimport { useState } from 'react'\r\n\r\nexport const useForm = ( initialState={} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n    const reset = ()=>{\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) =>{\r\n        setValues({\r\n            ...values,\r\n            [ target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange] = useForm( {\r\n        lEmail: 'lorena@gmail.com',\r\n        lPassword: '654321'\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange] = useForm( {\r\n        rName: 'nando',\r\n        rEmail: 'nando@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n    const {rName, rEmail, rPassword1, rPassword2}= formRegisterValues;\r\n\r\n\r\n\r\n    const {lEmail, lPassword}=formLoginValues;\r\n\r\n    const handleLogin = (e)=>{\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n\r\n\r\n    const handleRegister = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(rPassword1 !== rPassword2){\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\r\n        }\r\n        dispatch(startRegister(rName, rEmail, rPassword1));\r\n        console.log('se hizo el registro')\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form\r\n                        onSubmit={handleLogin}\r\n                    >\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { eventCleanAll } from '../../actions/events';\r\n\r\nexport const NavBar = () => {\r\n\r\n    const {name}= useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout=()=>{\r\n        dispatch(startLogout());\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\" ></i>\r\n                <span> salir</span>\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import { types } from \"../types/types\"\r\n\r\n\r\nexport const uiOpenModal=()=>({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal=()=>({\r\n    type: types.uiCloseModal\r\n})","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const {title, user} = event;\r\n    return (\r\n        <div>\r\n            <span>{title}</span>\r\n            <strong>{user.name}</strong>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate, eventUpdated } from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent={\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const {modalOpen} = useSelector(state => state.ui)\r\n    const {activeEvent} = useSelector(state => state.calendar)\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate())\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const {notes, title, start, end}=formValues;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFormValues(activeEvent);\r\n        }else{\r\n            setFormValues(initEvent);\r\n        }\r\n        \r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleIpuntChange = ({target})=>{\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal=()=>{\r\n        \r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n        \r\n    }\r\n\r\n    const handleStartDateChange = (e)=>{\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange =(e)=>{\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    };\r\n\r\n    const handleSubmitForm =(e)=>{\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            Swal.fire('Error', 'La fecha final debe de ser mayor a la fecha de inicio', 'error');\r\n            return;\r\n        }\r\n\r\n        if(title.trim().length < 2){\r\n\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdate(formValues));\r\n            \r\n        }else{\r\n            dispatch(eventStartAddNew( formValues ));\r\n        }\r\n\r\n\r\n\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> {(activeEvent)? 'Editar evento': 'Nuevo Evento'} </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker \r\n                        onChange={handleStartDateChange}\r\n                        value={ dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker \r\n                        onChange={handleEndDateChange}\r\n                        value={ dateEnd}\r\n                        minDate={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${ !titleValid && 'is-invalid'} `}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleIpuntChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleIpuntChange}                        \r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew=()=>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNew}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n            \r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete=()=>{\r\n        dispatch(eventStartDelete());\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"> </i>\r\n            <span>borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport moment from 'moment';\r\nimport { NavBar } from '../ui/NavBar'\r\nimport { Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\n\r\nimport {uiOpenModal} from '../../actions/ui';\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\n// const events =[{\r\n//     title: 'cumpleaños mio',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hour').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'comprar el pastel',\r\n//     user: {\r\n//         _id: '1234',\r\n//         name: 'erasmooo'\r\n//     }\r\n// }]\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar);\r\n    const {uid} = useSelector(state=>state.auth);\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n       \r\n       dispatch(eventStartLoading()) \r\n       \r\n    }, [dispatch])\r\n\r\n    const eventStyleGetter =(event, start, end, isSelected)=>{\r\n\r\n        const style={\r\n            backgroundColor: (uid===event.user._id)? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return{\r\n            style\r\n        }\r\n    };\r\n\r\n    const onDoubleClick=(e)=>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent=(e)=>{\r\n        dispatch(eventSetActive(e));\r\n\r\n    }\r\n    \r\n    const onViewChange=(e)=>{\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot=(e)=>{\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar/>\r\n\r\n            <Calendar \r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n            <AddNewFab/>\r\n            {\r\n                activeEvent &&\r\n                <DeleteEventFab/>\r\n            }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    \r\n\r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n    \r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={ (props)=>(\r\n                (isAuthenticated)\r\n                ? ( <Component {...props} />)\r\n                : (<Redirect to=\"/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes ={\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    \r\n\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={ (props)=>(\r\n                (isAuthenticated)\r\n                ? (<Redirect to=\"/\" />) \r\n                : ( <Component {...props} />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPublicRoute.propTypes ={\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    // Route, \r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth)\r\n    \r\n    useEffect(() => {\r\n        \r\n        dispatch(startChecking());\r\n        \r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact path=\"/login\"  \r\n                        component={LoginScreen} \r\n                        isAuthenticated={!!uid}\r\n                    />\r\n\r\n\r\n                    <PrivateRoute \r\n                        exact path=\"/\"       \r\n                        component={CalendarScreen} \r\n                        isAuthenticated={!!uid}\r\n                    />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n      </Router>\r\n\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState ={\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state= initialState, action)=>{\r\n    switch (action.type) {\r\n        \r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        \r\n        case types.authCheckingFinish:\r\n            return{\r\n                ...state,\r\n                checking:false\r\n            }\r\n        case types.authLogout:\r\n            return{\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { types } from \"../types/types\";\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'cumpleaños mio',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hour').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'comprar el pastel',\r\n//     user: {\r\n//         _id: '1234',\r\n//         name: 'erasmooo'\r\n//     }\r\n// }\r\nconst initialState ={\r\n    events:[],\r\n    activeEvent: null\r\n\r\n};\r\n\r\nexport const calendarReducer=(state=initialState, action)=>{\r\n\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }  \r\n        case types.eventAddNew:\r\n            return{\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        \r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                  activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return{\r\n                ...state,\r\n                events: state.events.map(\r\n                    e=>(e.id === action.payload.id)?action.payload:e\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return{\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e=>(e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded:\r\n            return{\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        \r\n        case types.eventCleanAll:\r\n            return{\r\n\r\n                ...initialState\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState={\r\n    modalOpen: false,\r\n}\r\n\r\n\r\nexport const uiReducer = (state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\"\r\nimport { authReducer } from \"./authReducer\"\r\nimport { calendarReducer } from \"./calendarReducer\"\r\nimport { uiReducer } from \"./uiReducer\"\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n    //TODO: CalendarReducer\r\n})","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store=createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n\n\nReactDOM.render(\n  \n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}